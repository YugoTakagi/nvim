[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
    " *** seting airline ***
    let g:airline#extensions#tabline#enabled = 1 "タブを有効
    let g:airline_theme = 'angr'
    let g:airline_powerline_fonts = 1

    let g:airline_section_z = airline#section#create(['windowswap', '%3p%% ', 'linenr', ':%3v'])
    let g:airline#extensions#virtualenv#enabled = 1
    let g:airline#extensions#hunks#enabled = 0
    let g:airline#extensions#ale#enabled = 1
    let g:airline#extensions#ale#error_symbol = 'E:'
    let g:airline#extensions#ale#warning_symbol = 'W:'

    nmap <C-p> <Plug>AirlineSelectPrevTab
    nmap <C-n> <Plug>AirlineSelectNextTab
    " **********************
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'preservim/nerdtree'

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
    set encoding=UTF-8
    set guifont=Hack\ Nerd\ Font\ Mono\ Regular:h11
    "let g:airline_powerline_fonts = 1
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
build = '''
  git checkout release
'''
hook_add = '''
  inoremap <silent><expr> <TAB>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<TAB>" :
        \ coc#refresh()
  inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"
  inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
  function! s:check_back_space() abort
    let col = col('.') - 1
    return !col || getline('.')[col - 1]  =~# '\s'
  endfunction
  nmap <silent> gd <Plug>(coc-definition)
  nmap <silent> gy <Plug>(coc-type-definition)
  nmap <silent> gi <Plug>(coc-implementation)
  nmap <silent> gr <Plug>(coc-references)
'''
